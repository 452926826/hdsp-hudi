"use strict";(self.webpackChunkhudi=self.webpackChunkhudi||[]).push([[86167],{32507:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=a(74848),i=a(28453);const o={title:"Incremental Processing on the Data Lake",excerpt:"How Apache Hudi provides ability for incremental data processing.",author:"vinoyang",category:"blog",image:"/assets/images/blog/incr-processing/image7.png",tags:["blog","datalake","incremental processing","apache hudi"]},r=void 0,s={permalink:"/blog/2020/08/18/hudi-incremental-processing-on-data-lakes",editUrl:"https://github.com/apache/hudi/edit/asf-site/website/blog/blog/2020-08-18-hudi-incremental-processing-on-data-lakes.md",source:"@site/blog/2020-08-18-hudi-incremental-processing-on-data-lakes.md",title:"Incremental Processing on the Data Lake",description:"NOTE: This article is a translation of the infoq.cn article, found here, with minor edits",date:"2020-08-18T00:00:00.000Z",tags:[{inline:!0,label:"blog",permalink:"/blog/tags/blog"},{inline:!0,label:"datalake",permalink:"/blog/tags/datalake"},{inline:!0,label:"incremental processing",permalink:"/blog/tags/incremental-processing"},{inline:!0,label:"apache hudi",permalink:"/blog/tags/apache-hudi"}],readingTime:17.005,hasTruncateMarker:!0,authors:[{name:"vinoyang",key:null,page:null}],frontMatter:{title:"Incremental Processing on the Data Lake",excerpt:"How Apache Hudi provides ability for incremental data processing.",author:"vinoyang",category:"blog",image:"/assets/images/blog/incr-processing/image7.png",tags:["blog","datalake","incremental processing","apache hudi"]},unlisted:!1,prevItem:{title:"Efficient Migration of Large Parquet Tables to Apache Hudi",permalink:"/blog/2020/08/20/efficient-migration-of-large-parquet-tables"},nextItem:{title:"PrestoDB and Apache Hudi",permalink:"/blog/2020/08/04/PrestoDB-and-Apache-Hudi"}},l={authorsImageUrls:[void 0]},c=[{value:"NOTE: This article is a translation of the infoq.cn article, found here, with minor edits",id:"note-this-article-is-a-translation-of-the-infoqcn-article-found-here-with-minor-edits",level:3}];function h(e){const t={a:"a",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h3,{id:"note-this-article-is-a-translation-of-the-infoqcn-article-found-here-with-minor-edits",children:["NOTE: This article is a translation of the infoq.cn article, found ",(0,n.jsx)(t.a,{href:"https://www.infoq.cn/article/CAgIDpfJBVcJHKJLSbhe",children:"here"}),", with minor edits"]}),"\n",(0,n.jsxs)(t.p,{children:['Apache Hudi is a data lake framework which provides the ability to ingest, manage and query large analytical data sets on a distributed file system/cloud stores.\nHudi joined the Apache incubator for incubation in January 2019, and was promoted to the top Apache project in May 2020. This article mainly discusses the importance\nof Hudi to the data lake from the perspective of "incremental processing". More information about Apache Hudi\'s framework functions, features, usage scenarios, and\nlatest developments can be found at ',(0,n.jsx)(t.a,{href:"https://qconplus.infoq.cn/2020/shanghai/presentation/2646",children:"QCon Global Software Development Conference (Shanghai Station) 2020"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>s});var n=a(96540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);