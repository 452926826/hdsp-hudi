"use strict";(self.webpackChunkhudi=self.webpackChunkhudi||[]).push([[17818],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>h});var r=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},37097:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=n(58168),i=(n(96540),n(15680));const a={title:"Build Hudi Date Dimension in Minutes with Spark SQL Minio and Query with Trino",authors:[{name:"Soumil Shah"}],category:"blog",image:"/assets/images/video_blogs/2024-05-23-build-hudi-date-dimension-in-minutes-with-spark-sql-minio-and-query-with-trino.png",navigate:"https://youtu.be/j25fIrTJtsQ?feature=shared",tags:["guide","beginner","apache hudi","minio","trino","apache hive","hive metastore","spark sql"]},o=void 0,l={permalink:"/cn/videos/2024/05/23/build-hudi-date-dimension-in-minutes-with-spark-sql-minio-and-query-with-trino",source:"@site/videoBlog/2024-05-23-build-hudi-date-dimension-in-minutes-with-spark-sql-minio-and-query-with-trino.mdx",title:"Build Hudi Date Dimension in Minutes with Spark SQL Minio and Query with Trino",description:"",date:"2024-05-23T00:00:00.000Z",formattedDate:"May 23, 2024",tags:[{label:"guide",permalink:"/cn/videos/tags/guide"},{label:"beginner",permalink:"/cn/videos/tags/beginner"},{label:"apache hudi",permalink:"/cn/videos/tags/apache-hudi"},{label:"minio",permalink:"/cn/videos/tags/minio"},{label:"trino",permalink:"/cn/videos/tags/trino"},{label:"apache hive",permalink:"/cn/videos/tags/apache-hive"},{label:"hive metastore",permalink:"/cn/videos/tags/hive-metastore"},{label:"spark sql",permalink:"/cn/videos/tags/spark-sql"}],readingTime:0,truncated:!1,authors:[{name:"Soumil Shah"}],prevItem:{title:"Learn How to Ingest data from pulsar Topic into Hudi with DeltaStreamer | Hands on Labs",permalink:"/cn/videos/2024/05/25/learn-how-to-ingest-data-from-pulsar-topic-into-hudi-with-deltastreamer"},nextItem:{title:"Demo Video : Hudi Delta Streamer Implementing Slowly Changing Dimension and Query that using Trino",permalink:"/cn/videos/2024/05/22/hudi-delta-streamer-implementing-slowly-changing-dimension-and-query-that-using-trino"}},s={authorsImageUrls:[void 0]},u=[],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.yg)(p,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}))}d.isMDXComponent=!0}}]);